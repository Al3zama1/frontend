.animated-grid {
  height: 85vh;

  display: grid;
  gap: 1rem;

  grid-template-areas:
    "a  b  c  d"
    "l  main  main  e"
    "k  main  main  f"
    "j  i  h  g";

  grid-template-rows: repeat(4, 25%);
  grid-template-columns: 240px auto auto 240px;

  --stagger-delay: 100ms;
}

@keyframes cardEntrance {
  from {
    opacity: 0;
    transform: scale(0.3);
    filter: hue-rotate(180deg);
  }
  to {
    opacity: 1;
    transform: scale(1);
    filter: hue-rotate(0deg);
  }
}

.card {
  background-color: rgb(36, 243, 147);
  animation: cardEntrance 700ms ease-out;
  animation-fill-mode: backwards;
}

.a {
  grid-area: a;
  animation-delay: calc(var(1 * --stagger-delay));
}

.b {
  grid-area: b;
  animation-delay: calc(var(2 * --stagger-delay));
}

.c {
  grid-area: c;

  animation-delay: calc(var(2 * --stagger-delay));
}

.d {
  grid-area: d;
  animation-delay: calc(var(3 * --stagger-delay));
}

.e {
  grid-area: e;
  animation-delay: calc(var(4 * --stagger-delay));
}

.f {
  grid-area: f;
  animation-delay: calc(var(5 * --stagger-delay));
}

.g {
  grid-area: g;
  animation-delay: calc(var(6 * --stagger-delay));
}

.h {
  grid-area: h;
  animation-delay: calc(var(7 * --stagger-delay));
}

.i {
  grid-area: i;
  animation-delay: calc(var(8 * --stagger-delay));
}

.j {
  grid-area: j;
  animation-delay: calc(var(9 * --stagger-delay));
}

.k {
  grid-area: k;
  animation-delay: calc(var(10 * --stagger-delay));
}

.l {
  grid-area: l;
  animation-delay: calc(var(11 * --stagger-delay));
}

.main {
  grid-area: main;
  animation-delay: calc(var(12 * --stagger-delay));
}
